<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_vmw_cloudservice_vra_action_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_vmw_cloudservice_vra_action_request">state=Closed Complete^status=SUCCESSFUL^ORstatus=COMPLETION^actionISNOTEMPTY^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="Closed Complete"/>
            <item endquery="false" field="status" goto="false" newquery="false" operator="=" or="false" value="SUCCESSFUL"/>
            <item endquery="false" field="status" goto="false" newquery="false" operator="=" or="true" value="COMPLETION"/>
            <item endquery="false" field="action" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>VRAImportSuccessfulResourceDeployment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	try{
		CASLogger.debug("INSIDE BR VRAImportSuccessfulResourceDeployment for importing Actions");
		this.daoUtil=new CASDaoUtil();
		this.appUtil=new CASAppUtil();
		//this.importtest =new vRAImportStart();
		var organization='';
		organization=current.action.machine.project.organization;
		var DeploymentId=current.action.machine.deploymentid;
		if(current.action.deployment.u_project.organization!='')
			{
			organization=current.action.deployment.u_project.organization;
			DeploymentId=current.action.deployment.deployment_id;
		}
		if(current.action_name=='Delete')
			{
			
			if(current.action.machine!='')
				{
				var machineId=current.action.machine.machine_id;
				var gr = new GlideRecord(this.appUtil.configuration.table.machines);
				gr.addQuery("machine_id",machineId );
				gr.query();
				if (gr.next()) {
					
					var vr = new GlideRecord(this.appUtil.configuration.table.action);
					vr.addQuery("machine.machine_id", machineId);
					vr.query();
					while (vr.next()) {
						
						vr.deleteMultiple();
					}
					
					
					gr.operational_status='6';
					gr.install_status='7';
					gr.update();
				}
			}
			
			
			
			if(current.action.deployment!='');
				{
				var deploymentId=current.action.deployment.deployment_id;
				
				var cr = new GlideRecord(this.appUtil.configuration.table.deployments);
				cr.addQuery("deployment_id", deploymentId);
				cr.query();
				if (cr.next()) {
					
					var br = new GlideRecord(this.appUtil.configuration.table.machines);
					br.addQuery("deploymentid", deploymentId);
					br.query();
					while (br.next()) {
						
						var xr = new GlideRecord(this.appUtil.configuration.table.action);
						xr.addQuery("machine.deploymentid",deploymentId);
						xr.query();
						while (xr.next()) {
							xr.deleteMultiple();
						}
						
						br.operational_status='6';
						br.install_status='7';
						br.update();
					}
					
					var yr = new GlideRecord(this.appUtil.configuration.table.action);
					yr.addQuery("deployment.deployment_id", deploymentId);
					yr.query();
					while (yr.next()) {
						yr.deleteMultiple();
					}
					
					cr.operational_status='6';
					cr.install_status='7';
					cr.update();
				}
			}
		}
		
		
		else{
			
			var endPoint='';
			//var casHost=organization.cas_url;  //old method
			var token='';
			var midserver='';
			
			if(organization.select_automation_service == 'vRealiseAutomationCloud')
				{
			endPoint=organization.cas_url+this.appUtil.configuration.api.machine+DeploymentId;
			token=organization.api_token.getDecryptedValue().toString();
		}
			if(organization.select_automation_service == 'vrealizeAutomationService'){
				
				endPoint=organization.hostname+this.appUtil.configuration.api.machine+DeploymentId;
				midserver=organization.mid_server.name;
				token=organization.api_token.getDecryptedValue();
			}
			var response = this.appUtil.makeApiCall( endPoint, 'get','', midserver, "application/json", "application/json", 'Bearer '+token);
			var responsestatus=response.getStatusCode();
			if(response.haveError())
				{
				CASLogger.error("Error occured While Requesting Resource Action inside BR VRAImportSuccessfulResourceDeployment"+response.getErrorMessage());
			}
			else
				{
				var responseBody= response.getBody();
				
				this.daoUtil.insert("createCMDB",responseBody,endPoint,organization);
				this.daoUtil.insert("reconcileCMDB"," "," ",organization);
					
// 				//if(current.action_name=='Remove Disk' && current.status=="SUCCESSFUL" && current.state=='Closed Complete')
// 					if(current.action_name=='Remove Disk')
// 					{
// 						gs.addInfoMessage("test"+organization+DeploymentId+current.action.machine.machine_id);
// 						this.importtest.testpreImportResource(organization,DeploymentId,current.action.machine.machine_id);
// 					}
				
				//this.daoUtil.insert("reconcileCMDB"," "," ",organization);
				
				
				
			}
		}
	}catch(e)
	{
		CASLogger.error("Exception Caught inside BR VRAImportSuccessfulResourceDeployment  "+e);
	}
	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-14 05:38:51</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>83a997fa1b377700e61b21b6bc4bcb26</sys_id>
        <sys_mod_count>44</sys_mod_count>
        <sys_name>VRAImportSuccessfulResourceDeployment</sys_name>
        <sys_overrides/>
        <sys_package display_value="VMware vRealize Automation ITSM Application 8.3" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware vRealize Automation ITSM Application 8.3">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>sys_script_83a997fa1b377700e61b21b6bc4bcb26</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-10-16 10:24:33</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=83a997fa1b377700e61b21b6bc4bcb26"/>
</record_update>
