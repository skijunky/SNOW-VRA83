<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_vmw_cloudservice_machines</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>IRE Machines</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {



	this.appUtil=new CASAppUtil();

	var get=new CASDaoUtil().getProjectId(current.deploymentid);
	current.project=get;



	var obj= this.appUtil.parse(current.ire_properties);

	if(obj.type!=null)
	{
		current.u_type=obj.type;
	}
	if(obj.resourceName!=null)
	{
		current.resource_name=obj.resourceName;
	}
	if(obj.name!=null)
	{
		current.machine_name=obj.name;
	}
	if(obj.capacityGb!=null)
	{
		current.capacity_gb=obj.capacityGb;
	}
	if(obj.host!=null)
	{
		current.host_schema=this.appUtil.stringify(obj.host);
	}
	if(obj.encrypted!=null)
	{
		current.encrypted=obj.encrypted;
	}
	if(obj.status!=null)
	{
		current.attachment_status=obj.status;
	}
	if(obj.region!=null)
	{
		current.region=obj.region;
	}
	if(obj.account!=null)
	{
		current.account=obj.account;
	}

	if(obj.account!=null && obj.region!=null)
	{
		current.account_region=obj.account+'/'+obj.region;
	}
	if(obj.zone!=null)
	{
		current.zone=obj.zone;
	}
	if(obj.endpointType!=null)
	{
		current.endpointtype=obj.endpointType;
	}
	if(obj.powerState!=null)
	{
		current.status=obj.powerState;
	}



	if(obj.storage!=null)
	{
		current.storage=this.appUtil.stringify(obj.storage);
	}
	if(obj.networks!=null)
	{
		current.network_schema=this.appUtil.stringify(obj.networks);
	}
	if(obj.address!=null)
	{
		current.address=obj.address;
	}
	if(obj.volumeType!=null)
	{
		current.volumetype=obj.volumeType;
	}
	if(obj.externalLink!=null)
	{
		current.externallink=obj.externalLink;
	}
	if(obj.nodeUUID!=null)
	{
		current.node_uuid=obj.nodeUUID;
	}
	if(obj.environment!=null)
	{
		current.environment=obj.environment;
	}
	if(obj.role!=null)
	{
		current.role=obj.role;
	}
	if(obj.networkType!=null)
	{
		current.network_type=obj.networkType;
	}
	if(obj.workflowName!=null)
	{
		current.workflow_name=obj.workflowName;
	}
	if(obj.workflowId!=null)
	{
		current.workflow_id=obj.workflowId;
	}
	if(obj.stackGeneratedName)
	{
		current.stack_name=obj.stackGeneratedName;
	}
	if(obj.inputs)
	{
		current.inputs=this.appUtil.stringify(obj.inputs);
	}
	if(obj.outputs!=null)
	{
		current.outputs=this.appUtil.stringify(obj.outputs);
	}
	if(obj.resources!=null)
	{
		current.resources=this.appUtil.stringify(obj.resources);
	}

	if(obj.id!=null && current.type=='vro.workflow')
	{
		if(obj.id!=null)
		{
			current.workflow_run_id=obj.id;
		}


		if(obj.startedOn!=null)
		{

			var startDate=obj.startedOn;
			var IntDate=parseInt(startDate);
			var actualDate=new Date(IntDate);
			var date=actualDate.toISOString();
			var actualdate=new Date(date);
			current.started_on=actualdate.toString();
		}

		if(obj.completedOn!=null)
		{
			var CompleteDate=obj.completedOn;
			var IntComDate=parseInt(CompleteDate);
			var actualComDate=new Date(IntComDate);
			var date=actualComDate.toISOString();
			var actualdate=new Date(date);
			current.completed_on=actualdate.toString();
		}

	}

	if(current.type=='aws.cft')
	{
		if(obj.status!=null)
		{
			current.status=obj.status;
		}
		current.attachment_status='';
	}

	if(current.type=='abx.action'||current.type=='Cloud.vSphere.Machine'||current.type=='Cloud.AWS.EC2.Instance')
	{
		if(obj.id!=null)
		{
			current.id=obj.id;
		}
	}

	if(current.type=='Cloud.LoadBalancer' || current.type=='Cloud.NSX.LoadBalancer')
	{

		if(obj.address!=null)
		{
			current.address=obj.address;
		}

		if(obj.routes!=null)
		{
			current.routes_schema=this.appUtil.stringify(obj.routes);
		}


	}

	var PropertiesImport=this.appUtil.parse(current.ire_properties);
	var objectProp= {"properties":PropertiesImport};
	var stringProp=JSON.stringify(objectProp);
	var objCustom= this.appUtil.parse(stringProp);

	var key;

	var resourceList=gs.getProperty(this.appUtil.configuration.properties.resourceExlusion);

	var prop=objCustom.properties;

	for(key in prop)
	{
		var check= resourceList.indexOf(key);

		if(check >-1)
		{
			delete prop[key];
		}

	}

	current.custom_properties_schema=this.appUtil.stringify(prop);


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-09-09 09:54:49</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>581a9f472f8314109057f3ecf699b6a1</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>IRE Machines</sys_name>
        <sys_overrides/>
        <sys_package display_value="VMware vRealize Automation ITSM Application 8.3" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware vRealize Automation ITSM Application 8.3">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>sys_script_581a9f472f8314109057f3ecf699b6a1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-09-17 12:10:26</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=581a9f472f8314109057f3ecf699b6a1"/>
</record_update>
