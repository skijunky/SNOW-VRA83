<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_vmw_cloudservice_cas_catalog_entitlement</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_vmw_cloudservice_cas_catalog_entitlement">entitled_groupsVALCHANGES^EQ<item endquery="false" field="entitled_groups" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>vRA Entitlement Group Change</name>
        <order>40</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var appUtil= new CASAppUtil();

	try
	{
		CASLogger.debug("Inside Send email on Notify when entitle is Update for Group:Business Rule");
		var entitlement= gs.getProperty(appUtil.configuration.properties.vRA_entitlement);

		if(entitlement=='true' && (current.active == true || previous.active == true))
		{
			// B :- Normal Entitlement Update like project, actions, active status, catalog item
			// C :- Only Entitle Users
			// D :- Only Entitle Groups
			var B = (current.endpoint.changes()||current.select_projects.changes()||current.select_catalog_items.changes()||current.active.changes()||current.deployment_actions.changes()||current.machine_actions.changes()) ? true : false;
			var C = current.entitled_users.changes();
			var D = current.entitled_groups.changes();

			
			if(B && C && D){
				entitleGroupsNotificationUpdate();
			}else if(C && D){
				entitleGroupsNotificationUpdate();
			}
						
		}
	}


	catch(e)
	{
		CASLogger.error("Exception caught inside Send email on Notify when entitle is Update:Business Rule"+e);
	}
	
	function entitleGroupsNotificationUpdate(){
		
		var cGrp=current.entitled_groups.toString();
		var pGrp=previous.entitled_groups.toString();
		var arr1=[];
		var arr2=[];
		var arr3=[];
		var arr4=[];
		var grp=[];
		var grp2=[];
		var grp3=[];
		grp=cGrp.split(',');
		grp3=pGrp.split(',');
		var index;
		var reciever = '';
		
		if(cGrp=='')
		{
			for(var x=0;x<grp3.length;x++)
				{
					arr4.push(grp3[x]);
				}
				//var newArr1=[];
				//for(var z1=1;z1<=arr4.length;z1++)
				//{
				//	newArr1.push(arr4[z1])  ;
				//}
			
				reciever = getRecieverEmail(arr4);
				gs.eventQueue('x_vmw_cloudservice.vRA_entitle_grp_chang',current,reciever,arr4);	
		}
			else if(pGrp=='')
			{
				for(var x=0;x<grp.length;x++)
				{
					arr3.push(grp[x]);
				}
// 				var newArr1=[];
// 				for(var z1=1;z1<=arr3.length;z1++)
// 				{
// 					newArr1.push(arr3[z1])  ;
// 				}
				reciever = getRecieverEmail(arr3);
				gs.eventQueue('x_vmw_cloudservice.vRA_entitle_grp_chang',current,reciever,arr3);		
			}
			else
			{

				for(var j=0;j<grp.length;j++)
				{
					arr1.push(grp[j]);
				}

				grp2=pGrp.split(',');
				for(var k=0;k<grp2.length;k++)
				{
					arr2.push(grp2[k]);
				}					
				var arrayDiff=[];
				arrayDiff =diff(arr1,arr2);
// 				var newArr=[];
// 				for(var z=1;z<=arrayDiff.length;z++)
// 				{
// 					newArr.push(arrayDiff[z]) ;
// 				}

				reciever = getRecieverEmail(arrayDiff);
				gs.eventQueue('x_vmw_cloudservice.vRA_entitle_grp_chang',current,reciever,arrayDiff);	
				//****  Group Changes End ********************

			}
	}
	
	function getRecieverEmail(recieversArr){
		
		var group = new GlideRecordSecure(appUtil.configuration.table.group_users_member);
		group.addQuery("group", recieversArr);
		group.query();

		var preGroup = '';

		while (group.next()) {
			//email trigger for Group Email ID.
			
			if(group.group.active == true){
				if (preGroup != group.group.name) {
					if (group.group.email != '') {
						var reciever = group.group.email;
						return reciever;
					}
					preGroup = group.group.name;
				}

				//email trigger for Group's Members Email ID
				if (group.user.email != '' && group.user.active == true){
					var reciever = group.user.email;
					return reciever;
				} 
			}
			
		}
	}

	function diff(arr1, arr2) {
		var newArr = [];
		var arr = arr1.concat(arr2);

		for (var i in arr){
			var f = arr[i];
			var t = 0;
			for (j=0; j<arr.length; j++){
				if(arr[j] === f){
					t++; 
				}
			}
			if (t === 1){
				newArr.push(f);
			}
		} 
		return newArr;
	}


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-18 13:27:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b03b72f6db2b00102dd0d1b1ca96191e</sys_id>
        <sys_mod_count>28</sys_mod_count>
        <sys_name>vRA Entitlement Group Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="VMware vRealize Automation ITSM Application 8.3" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware vRealize Automation ITSM Application 8.3">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>sys_script_b03b72f6db2b00102dd0d1b1ca96191e</sys_update_name>
        <sys_updated_by>prateek</sys_updated_by>
        <sys_updated_on>2020-04-09 10:30:36</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b03b72f6db2b00102dd0d1b1ca96191e"/>
</record_update>
